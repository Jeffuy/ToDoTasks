{"version":3,"sources":["hooks/useLocalStorage.jsx","context/AppContext.jsx","components/TodoCounter.jsx","components/TodoSearch.jsx","components/TodoList.jsx","components/TodoItem.jsx","components/CreateTodoButton.jsx","components/Modal.jsx","components/TodoForm.jsx","pages/AppUi.jsx","pages/App.jsx","index.js"],"names":["useLocalStorage","itemName","initialValue","React","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","TodoContext","createContext","TodoProvider","props","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUi","map","App","render"],"mappings":"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","file":"static/js/main.4bd53a08.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue);\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName);\r\n                let parsedItem;\r\n\r\n                if (!localStorageItem) {\r\n                    localStorage.setItem(\r\n                        itemName,\r\n                        JSON.stringify(initialValue)\r\n                    );\r\n                    parsedItem = initialValue;\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem);\r\n                }\r\n\r\n                setItem(parsedItem);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n        }, 3000);\r\n    });\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            localStorage.setItem(itemName, JSON.stringify(newItem));\r\n            setItem(newItem);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    return { item, saveItem, loading, error };\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n    } = useLocalStorage(\"TODOS_V1\", []);\r\n\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n\tconst [openModal, setOpenModal] = React.useState(false);\r\n\r\n    const completedTodos = todos.filter((todo) => !!todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    let searchedTodos = [];\r\n\r\n    if (!searchValue.length >= 1) {\r\n        searchedTodos = todos;\r\n    } else {\r\n        searchedTodos = todos.filter((todo) => {\r\n            const todoText = todo.text.toLowerCase();\r\n            const searchText = searchValue.toLowerCase();\r\n            return todoText.includes(searchText);\r\n        });\r\n    }\r\n\r\n    const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n\tconst addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n\t\t\tcompleted: false,\r\n\t\t\ttext,\r\n\t\t})\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={{\r\n                error,\r\n                loading,\r\n                totalTodos,\r\n                completedTodos,\r\n                searchValue,\r\n                setSearchValue,\r\n                searchedTodos,\r\n\t\t\t\taddTodo,\r\n                completeTodo,\r\n                deleteTodo,\r\n\t\t\t\topenModal,\r\n\t\t\t\tsetOpenModal\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport {\r\n\tTodoContext,\r\n\tTodoProvider,\r\n}\r\n","import React from 'react'\r\nimport { TodoContext } from '../context/AppContext';\r\nimport '../styles/components/TodoCounter.css';\r\n\r\nconst TodoCounter = () => {\r\n\r\n\tconst { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n\r\n\treturn (\r\n\t\t<h2 className=\"TodoCounter\" >Has completado {completedTodos} de {totalTodos} TODOs</h2>\r\n\t)\r\n}\r\n\r\nexport { TodoCounter }\r\n","import React from \"react\";\r\nimport { TodoContext } from \"../context/AppContext\";\r\nimport \"../styles/components/TodoSearch.css\";\r\n\r\nconst TodoSearch = () => {\r\n\r\n\tconst { searchValue, setSearchValue } = React.useContext(TodoContext);\r\n\r\n\t\r\n\r\n    const onSearchValueChange = (event) => {\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <input\r\n            className=\"TodoSearch\"\r\n            placeholder=\"Cebolla\"\r\n\t\t\tvalue={searchValue}\r\n            onChange={onSearchValueChange}\r\n        />)\r\n};\r\n\r\nexport { TodoSearch };\r\n","import React from 'react'\r\nimport '../styles/components/TodoList.css';\r\n\r\nconst TodoList = (props) => {\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<ul>\r\n\t\t\t\t{props.children}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport {TodoList}\r\n","import React from \"react\";\r\nimport \"../styles/components/TodoItem.css\";\r\n\r\nconst TodoItem = (props) => {\r\n    return (\r\n        <li className=\"TodoItem\">\r\n            <span\r\n                className={`Icon Icon-check ${\r\n                    props.completed && \"Icon-check--active\"\r\n                }`}\r\n                onClick={props.onComplete}\r\n            >\r\n                √\r\n            </span>\r\n            <p\r\n                className={`TodoItem-p ${\r\n                    props.completed && \"TodoItem-p--complete\"\r\n                }`}\r\n            >\r\n                {props.text}\r\n            </p>\r\n            <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\r\n                X\r\n            </span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport { TodoItem };\r\n","import React from \"react\";\r\nimport \"../styles/components/CreateTodoButton.css\";\r\n\r\nconst CreateTodoButton = (props) => {\r\n\r\n\tconst onClickButton = () => {\r\n\t\tprops.setOpenModal(prevState => !prevState);\r\n\t}\r\n\r\n    return (\r\n        <button\r\n            className=\"CreateTodoButton\"\r\n            onClick={() => onClickButton()}\r\n        >\r\n            +\r\n        </button>\r\n    );\r\n};\r\n\r\nexport { CreateTodoButton };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles/components/Modal.css\";\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">{children}</div>,\r\n        document.getElementById(\"modal\")\r\n    );\r\n}\r\n\r\nexport { Modal };\r\n","import React from \"react\";\r\nimport \"../styles/components/TodoForm.css\";\r\nimport { TodoContext } from \"../context/AppContext\";\r\n\r\nfunction TodoForm() {\r\n\r\n\tconst [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n\r\n\r\n    const { addTodo, setOpenModal } = React.useContext(TodoContext);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetNewTodoValue(event.target.value);\r\n\t}\r\n\r\n    const onCancel = () => {\r\n        setOpenModal((prevState) => !prevState);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\taddTodo(newTodoValue);\r\n\t\tsetOpenModal((prevState) => !prevState);\r\n\t\t\r\n\t};\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Escribe tu nuevo To Do</label>\r\n            <textarea\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n                placeholder=\"Escribe una nueva tarea\"\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"TodoForm-button TodoForm-button-cancel\"\r\n                    onClick={onCancel}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n\r\n                <button\r\n                    className=\"TodoForm-button TodoForm-button-add\"\r\n                    type=\"submit\"\r\n                >\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport { TodoForm };\r\n","import React from \"react\";\r\nimport { TodoContext } from \"../context/AppContext\";\r\nimport { TodoCounter } from \"../components/TodoCounter\";\r\nimport { TodoSearch } from \"../components/TodoSearch\";\r\nimport { TodoList } from \"../components/TodoList\";\r\nimport { TodoItem } from \"../components/TodoItem\";\r\nimport { CreateTodoButton } from \"../components/CreateTodoButton\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { TodoForm } from \"../components/TodoForm\";\r\n\r\nconst AppUi = () => {\r\n    const {\r\n        error,\r\n        loading,\r\n        searchedTodos,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    return (\r\n        <>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n\r\n            <TodoList>\r\n                {error && <p>ERROR</p>}\r\n                {loading && <p>Loading...</p>}\r\n                {!loading && !searchedTodos.length && (\r\n                    <p>Crea tu primer TODO</p>\r\n                )}\r\n\r\n                {searchedTodos.map((todo) => (\r\n                    <TodoItem\r\n                        key={todo.text}\r\n                        text={todo.text}\r\n                        completed={todo.completed}\r\n                        onComplete={() => completeTodo(todo.text)}\r\n                        onDelete={() => deleteTodo(todo.text)}\r\n                    />\r\n                ))}\r\n            </TodoList>\r\n\r\n            {!!openModal && (\r\n                <Modal>\r\n                    <TodoForm />\r\n                </Modal>\r\n            )}\r\n\r\n            <CreateTodoButton \r\n\t\t\tsetOpenModal={setOpenModal}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppUi;\r\n","import React from \"react\";\nimport AppUI from \"./AppUi\";\nimport { TodoProvider } from \"../context/AppContext\";\n\nfunction App() {\n    return (<TodoProvider>\n\t\t<AppUI />\n\t\t</TodoProvider>)\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nReactDOM.createPortal(\n\t<App />,\n\tdocument.getElementById(\"modal\")\n)\n"],"sourceRoot":""}